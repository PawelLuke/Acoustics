import java.awt.BorderLayout;
import java.awt.Color;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import javax.swing.JPanel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.IntervalMarker;
import org.jfree.chart.plot.Marker;
import org.jfree.chart.plot.XYPlot;
import org.jfree.data.time.Millisecond;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.ui.Layer;

public class Main extends javax.swing.JFrame
{
    private static Main instance;
    private Main() 
    {
        initComponents();
        //initJPanel();
        
    }
    
    public static Main getInstance()
    {
        if(instance==null)
        {
            instance= new Main();
        }
        return instance;
    }
    
   private void initJPanel()
   {
       jPanel1.setLayout(new BorderLayout());
   }
    
   public void  setTextLeq(String txtLeq)
   {
       this.txtLeq.setText(txtLeq);
   }
   
   public void setChartPanel(ChartPanel cp)
   {
     jPanel1.add(cp);   
     jPanel1.validate();
   }
   
   public JPanel getJPanel1()
   {
       return jPanel1;
   }


    //TODO -> Move it in diffrent place
   private String msToDate(double timeInMs)
   {
       SimpleDateFormat sdf = new SimpleDateFormat("HH:mm:ss");
       return sdf.format(new Date((long) timeInMs));
   }
   
   public void  setTextStartTime(double txtStartTime)
   {
       this.txtStartTime.setText(msToDate(txtStartTime));
   }
      
    public void  setTextStopTime(double txtStopTime)
   {
       this.txtStopTime.setText(msToDate(txtStopTime));
   }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jPanel1 = new javax.swing.JPanel();
        btnNewMarker = new javax.swing.JButton();
        txtLeq = new javax.swing.JTextField();
        lbLeq = new javax.swing.JLabel();
        btnLoadData = new javax.swing.JButton();
        lbStartTime = new javax.swing.JLabel();
        txtStopTime = new javax.swing.JTextField();
        lbStopTime = new javax.swing.JLabel();
        txtStartTime = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();

        jMenuItem1.setText("jMenuItem1");

        jButton1.setText("jButton1");

        jButton3.setText("jButton3");

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.setCursor(new java.awt.Cursor(java.awt.Cursor.CROSSHAIR_CURSOR));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 898, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 298, Short.MAX_VALUE)
        );

        btnNewMarker.setText("Dodaj marker");
        btnNewMarker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewMarkerActionPerformed(evt);
            }
        });

        txtLeq.setText("Load data");
        txtLeq.setEnabled(false);
        txtLeq.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtLeqActionPerformed(evt);
            }
        });

        lbLeq.setText("LAeq");

        btnLoadData.setText("Wczytaj dane");
        btnLoadData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoadDataActionPerformed(evt);
            }
        });

        lbStartTime.setText("Start time");

        txtStopTime.setText("stop time");
        txtStopTime.setEnabled(false);
        txtStopTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStopTimeActionPerformed(evt);
            }
        });

        lbStopTime.setText("Stop time");

        txtStartTime.setText("start time");
        txtStartTime.setEnabled(false);
        txtStartTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtStartTimeActionPerformed(evt);
            }
        });

        jButton2.setText("TEST");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 91, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(251, 251, 251)
                .addComponent(lbLeq)
                .addGap(18, 18, 18)
                .addComponent(txtLeq, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 325, Short.MAX_VALUE)
                                .addComponent(lbStopTime))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(lbStartTime)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtStartTime, javax.swing.GroupLayout.DEFAULT_SIZE, 67, Short.MAX_VALUE)
                            .addComponent(txtStopTime))
                        .addGap(139, 139, 139))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnNewMarker, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLoadData, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 63, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbStartTime)
                    .addComponent(txtStartTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtStopTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbStopTime))
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtLeq, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbLeq)
                    .addComponent(btnNewMarker)
                    .addComponent(btnLoadData))
                .addGap(39, 39, 39))
        );

        jPanel1.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtLeqActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtLeqActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtLeqActionPerformed
    
    /**
     * Get array of time nad Leq and put in in JPanel
     * @param arrayOfarray 
     */
    ChartPanel setDataToJPanel(ArrayList<ArrayList<Double>> arraytimeAndLeq)
    {
    ArrayList<Double> timeArray = arraytimeAndLeq.get(Constant.IDX_DATE);
    ArrayList<Double> leqArray = arraytimeAndLeq.get(Constant.IDX_LEQ);
    TimeSeries ts = new DataMeterTs().getTimeSeries(timeArray, leqArray);
    TimeSeriesCollection tsc = new DataMeterTsc().getAndsetTimeSeriesCollection(ts);
    JFreeChart jfc = Function_Chart.getInstance().getJFreeChart(tsc);
    ChartPanel cp = Function_Chart.getInstance().getChartPanel(jfc);
    jPanel1.setLayout(new BorderLayout());
    jPanel1.add(cp,BorderLayout.CENTER);
    jPanel1.validate();
    return cp;
    }
    
    private ArrayList<ArrayList<Double>> getDataTroughtAdapter(DMEnvironment enviormentNoise)
    {
       ArrayList<String[]> arrayFromMeter = enviormentNoise.getCSVFromMeter();
       ArrayList<Double> dataArray = enviormentNoise.setDateArray(arrayFromMeter);
       ArrayList<Double> leqArray = enviormentNoise.setLeqArray(arrayFromMeter);
       ArrayList<ArrayList<Double>> array = new ArrayList<>();
       array.add(dataArray);
       array.add(leqArray);
       return array;
    }
    
//    private void setFlagsForMarkers()
//    {
//        var listOfArray = DataMeter.getInstance().getArrayOfLeq();
//        for(var list :listOfArray )
//        {
//            for(var leq:list)
//            {
//                //Function_Chart.csvFileFlgs.add(true);
//            }
//        }
//    }
    
    private void setMouseListener(ChartPanel cp)
    {
       cp.addMouseListener(new MouseMarker(cp));
    }
    
    private void btnLoadDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoadDataActionPerformed
         //TODO -> Make more adapter and use strategy adapter
        DMEnvironment enviormentNoise = new DMAdapter958v1();
        ArrayList<ArrayList<Double>> dateAndLeqFromAdapter = getDataTroughtAdapter(enviormentNoise);
        new MouseMarkerFlags().setNewArray(dateAndLeqFromAdapter);
        ChartPanel cp = setDataToJPanel(dateAndLeqFromAdapter);
        setMouseListener(cp);
         new Calculation().updateLaeq();
    }//GEN-LAST:event_btnLoadDataActionPerformed

    private void txtStopTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStopTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStopTimeActionPerformed

    private void txtStartTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtStartTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtStartTimeActionPerformed

    private void btnNewMarkerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewMarkerActionPerformed
      //Function_Chart.getInstance().clearChart();
    }//GEN-LAST:event_btnNewMarkerActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        //Wczytaj dane i umiesc je w katalogu dla TIme series collection
        
        
        
        //Stworz TimeSeries - Czesc "Load" - Wczesniej sprawdz czy to jest plik CSV
        TimeSeries nullseries = new TimeSeries(Constant.SERIES_NULL);
        Date date = new Date((long)1.607894000E12);
        var rtp = new Millisecond(date);
        nullseries.add(rtp, 56.1);
 
        //Czesc "Niezalezna od "Load"
        //Dodaj TimeSeries do kolekcji - po każdorazowym wrzytaniu nowych danych, dodawaj kolejne serie
        TimeSeriesCollection tsc = new TimeSeriesCollection();
        tsc.addSeries(nullseries);
        
        //Stworz nowa chartFactory - w tym przypadku time series, ale może być też inna
        var jfc = ChartFactory.createTimeSeriesChart("LAeq", "Godzina", "LAeq dB", tsc, false, false, false);
        
        //stworz nowy chart panel - chart panel moze przyjmować różne jfc
        ChartPanel cp = new ChartPanel(jfc);
        
        //Inicjalizacja
        jPanel1.setLayout(new BorderLayout());
        
        //Dodanie chart panel do Panelu
        jPanel1.add(cp);
        jPanel1.validate();
        
//                    Marker  marker = new IntervalMarker(1.607894050E12, 1.607894090E12);
//                    marker.setPaint(new Color(255, 0, 0, 255));
//                    jfc.getXYPlot().addDomainMarker(marker,Layer.BACKGROUND);
        
      //  Main.getInstance().setChartPanel(cp);
        
        //Function_Chart.getInstance().initNullChart();
    }//GEN-LAST:event_jButton2ActionPerformed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               var mainForm =  Main.getInstance();
               mainForm.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLoadData;
    private javax.swing.JButton btnNewMarker;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbLeq;
    private javax.swing.JLabel lbStartTime;
    private javax.swing.JLabel lbStopTime;
    private javax.swing.JTextField txtLeq;
    private javax.swing.JTextField txtStartTime;
    private javax.swing.JTextField txtStopTime;
    // End of variables declaration//GEN-END:variables
}